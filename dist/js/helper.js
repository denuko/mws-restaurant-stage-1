'use strict';

/**
 * helper.js contains functions that help not repeat code
 * in order to keep the code in other js files tidied up
 */

/**
 * Create source element and append it to picture element.
 */
var addImageSourceToPicture = function addImageSourceToPicture(picture, media, srcset) {
  var source = document.createElement('source');
  if (media !== undefined) {
    source.media = media;
  }
  source.srcset = srcset;
  picture.append(source);
};

/**
 * Extract extension from filename.
 */
var fileExtension = function fileExtension(filename) {
  return filename.split('.').pop();
};

/**
 * Get filename without extension.
 */
var filenameWithoutExtension = function filenameWithoutExtension(filename) {
  return filename.replace(/.[^.]+$/, '');
};

/**
 * Get all possible names of an image depending on its size (small, medium, large).
 */
var imageNamesBySize = function imageNamesBySize(imageFilename) {
  var imageExtension = 'jpg';
  var filenames = {};
  filenames.small = imageFilename + '-small.' + imageExtension;
  filenames.medium = imageFilename + '-medium.' + imageExtension;
  filenames.large = imageFilename + '-large.' + imageExtension;

  return filenames;
};

/**
 * Include google maps api on the fly.
 */
var getGoogleMapsApi = function getGoogleMapsApi() {
  var js_file = document.createElement('script');
  js_file.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyBzXDGrWxj1GsJUbo9ZKSJPz07o2K1ljgc&libraries=places&callback=initMap';
  document.body.appendChild(js_file);

  // Remove maps api script tag, to include it again on the fly when needed.
  js_file.remove();
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlci5qcyJdLCJuYW1lcyI6WyJhZGRJbWFnZVNvdXJjZVRvUGljdHVyZSIsInBpY3R1cmUiLCJtZWRpYSIsInNyY3NldCIsInNvdXJjZSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInVuZGVmaW5lZCIsImFwcGVuZCIsImZpbGVFeHRlbnNpb24iLCJmaWxlbmFtZSIsInNwbGl0IiwicG9wIiwiZmlsZW5hbWVXaXRob3V0RXh0ZW5zaW9uIiwicmVwbGFjZSIsImltYWdlTmFtZXNCeVNpemUiLCJpbWFnZUZpbGVuYW1lIiwiaW1hZ2VFeHRlbnNpb24iLCJmaWxlbmFtZXMiLCJzbWFsbCIsIm1lZGl1bSIsImxhcmdlIiwiZ2V0R29vZ2xlTWFwc0FwaSIsImpzX2ZpbGUiLCJzcmMiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJyZW1vdmUiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7O0FBS0E7OztBQUdBLElBQU1BLDBCQUEwQixTQUExQkEsdUJBQTBCLENBQUNDLE9BQUQsRUFBVUMsS0FBVixFQUFpQkMsTUFBakIsRUFBNEI7QUFDeEQsTUFBTUMsU0FBU0MsU0FBU0MsYUFBVCxDQUF1QixRQUF2QixDQUFmO0FBQ0EsTUFBSUosVUFBVUssU0FBZCxFQUF5QjtBQUNyQkgsV0FBT0YsS0FBUCxHQUFlQSxLQUFmO0FBQ0g7QUFDREUsU0FBT0QsTUFBUCxHQUFnQkEsTUFBaEI7QUFDQUYsVUFBUU8sTUFBUixDQUFlSixNQUFmO0FBQ0gsQ0FQRDs7QUFTQTs7O0FBR0EsSUFBTUssZ0JBQWdCLFNBQWhCQSxhQUFnQixDQUFDQyxRQUFELEVBQWM7QUFDaEMsU0FBT0EsU0FBU0MsS0FBVCxDQUFlLEdBQWYsRUFBb0JDLEdBQXBCLEVBQVA7QUFDSCxDQUZEOztBQUlBOzs7QUFHQSxJQUFNQywyQkFBMkIsU0FBM0JBLHdCQUEyQixDQUFDSCxRQUFELEVBQWM7QUFDM0MsU0FBT0EsU0FBU0ksT0FBVCxDQUFpQixTQUFqQixFQUE0QixFQUE1QixDQUFQO0FBQ0gsQ0FGRDs7QUFJQTs7O0FBR0EsSUFBTUMsbUJBQW1CLFNBQW5CQSxnQkFBbUIsQ0FBQ0MsYUFBRCxFQUFtQjtBQUN4QyxNQUFNQyxpQkFBaUIsS0FBdkI7QUFDQSxNQUFNQyxZQUFZLEVBQWxCO0FBQ0FBLFlBQVVDLEtBQVYsR0FBcUJILGFBQXJCLGVBQTRDQyxjQUE1QztBQUNBQyxZQUFVRSxNQUFWLEdBQXNCSixhQUF0QixnQkFBOENDLGNBQTlDO0FBQ0FDLFlBQVVHLEtBQVYsR0FBcUJMLGFBQXJCLGVBQTRDQyxjQUE1Qzs7QUFFQSxTQUFPQyxTQUFQO0FBQ0gsQ0FSRDs7QUFVQTs7O0FBR0EsSUFBTUksbUJBQW1CLFNBQW5CQSxnQkFBbUIsR0FBTTtBQUMzQixNQUFNQyxVQUFVbEIsU0FBU0MsYUFBVCxDQUF1QixRQUF2QixDQUFoQjtBQUNBaUIsVUFBUUMsR0FBUixHQUFjLHVIQUFkO0FBQ0FuQixXQUFTb0IsSUFBVCxDQUFjQyxXQUFkLENBQTBCSCxPQUExQjs7QUFFQTtBQUNBQSxVQUFRSSxNQUFSO0FBQ0gsQ0FQRCIsImZpbGUiOiJoZWxwZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogaGVscGVyLmpzIGNvbnRhaW5zIGZ1bmN0aW9ucyB0aGF0IGhlbHAgbm90IHJlcGVhdCBjb2RlXHJcbiAqIGluIG9yZGVyIHRvIGtlZXAgdGhlIGNvZGUgaW4gb3RoZXIganMgZmlsZXMgdGlkaWVkIHVwXHJcbiAqL1xyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBzb3VyY2UgZWxlbWVudCBhbmQgYXBwZW5kIGl0IHRvIHBpY3R1cmUgZWxlbWVudC5cclxuICovXHJcbmNvbnN0IGFkZEltYWdlU291cmNlVG9QaWN0dXJlID0gKHBpY3R1cmUsIG1lZGlhLCBzcmNzZXQpID0+IHtcclxuICAgIGNvbnN0IHNvdXJjZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NvdXJjZScpO1xyXG4gICAgaWYgKG1lZGlhICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBzb3VyY2UubWVkaWEgPSBtZWRpYTtcclxuICAgIH1cclxuICAgIHNvdXJjZS5zcmNzZXQgPSBzcmNzZXQ7XHJcbiAgICBwaWN0dXJlLmFwcGVuZChzb3VyY2UpO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIEV4dHJhY3QgZXh0ZW5zaW9uIGZyb20gZmlsZW5hbWUuXHJcbiAqL1xyXG5jb25zdCBmaWxlRXh0ZW5zaW9uID0gKGZpbGVuYW1lKSA9PiB7XHJcbiAgICByZXR1cm4gZmlsZW5hbWUuc3BsaXQoJy4nKS5wb3AoKTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBHZXQgZmlsZW5hbWUgd2l0aG91dCBleHRlbnNpb24uXHJcbiAqL1xyXG5jb25zdCBmaWxlbmFtZVdpdGhvdXRFeHRlbnNpb24gPSAoZmlsZW5hbWUpID0+IHtcclxuICAgIHJldHVybiBmaWxlbmFtZS5yZXBsYWNlKC8uW14uXSskLywgJycpO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIEdldCBhbGwgcG9zc2libGUgbmFtZXMgb2YgYW4gaW1hZ2UgZGVwZW5kaW5nIG9uIGl0cyBzaXplIChzbWFsbCwgbWVkaXVtLCBsYXJnZSkuXHJcbiAqL1xyXG5jb25zdCBpbWFnZU5hbWVzQnlTaXplID0gKGltYWdlRmlsZW5hbWUpID0+IHtcclxuICAgIGNvbnN0IGltYWdlRXh0ZW5zaW9uID0gJ2pwZyc7XHJcbiAgICBjb25zdCBmaWxlbmFtZXMgPSB7fTtcclxuICAgIGZpbGVuYW1lcy5zbWFsbCA9IGAke2ltYWdlRmlsZW5hbWV9LXNtYWxsLiR7aW1hZ2VFeHRlbnNpb259YDtcclxuICAgIGZpbGVuYW1lcy5tZWRpdW0gPSBgJHtpbWFnZUZpbGVuYW1lfS1tZWRpdW0uJHtpbWFnZUV4dGVuc2lvbn1gO1xyXG4gICAgZmlsZW5hbWVzLmxhcmdlID0gYCR7aW1hZ2VGaWxlbmFtZX0tbGFyZ2UuJHtpbWFnZUV4dGVuc2lvbn1gO1xyXG5cclxuICAgIHJldHVybiBmaWxlbmFtZXM7XHJcbn07XHJcblxyXG4vKipcclxuICogSW5jbHVkZSBnb29nbGUgbWFwcyBhcGkgb24gdGhlIGZseS5cclxuICovXHJcbmNvbnN0IGdldEdvb2dsZU1hcHNBcGkgPSAoKSA9PiB7XHJcbiAgICBjb25zdCBqc19maWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XHJcbiAgICBqc19maWxlLnNyYyA9ICdodHRwczovL21hcHMuZ29vZ2xlYXBpcy5jb20vbWFwcy9hcGkvanM/a2V5PUFJemFTeUJ6WERHcld4ajFHc0pVYm85WktTSlB6MDdvMksxbGpnYyZsaWJyYXJpZXM9cGxhY2VzJmNhbGxiYWNrPWluaXRNYXAnO1xyXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChqc19maWxlKTtcclxuICAgXHJcbiAgICAvLyBSZW1vdmUgbWFwcyBhcGkgc2NyaXB0IHRhZywgdG8gaW5jbHVkZSBpdCBhZ2FpbiBvbiB0aGUgZmx5IHdoZW4gbmVlZGVkLlxyXG4gICAganNfZmlsZS5yZW1vdmUoKTtcclxufTsiXX0=
